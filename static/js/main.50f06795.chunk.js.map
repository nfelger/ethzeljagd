{"version":3,"sources":["Auth.js","QuestionMarkBox.js","Para.js","Prelude.js","assets/ethereum.png","OpenSeaAsset.js","claimAssetContract.js","assets/lock.png","assets/lock-open.png","ClaimableAsset.js","ClaimFour.js","Finale.js","Game.js","App.js","reportWebVitals.js","index.js"],"names":["authMachine","createMachine","id","initial","states","unauthenticated","on","FABIAN","NOT_FABIAN","FAIL","fabian","entry","notFabian","fail","onGetAddress","a","window","ethereum","request","method","address","Auth","fabiansEth","onComplete","useMachine","actions","complete","state","send","handleGetAddress","value","onClick","connectMetaMask","className","QuestionMarkBox","props","Para","children","extraClassNames","preludeMachine","msg1","after","msg2","msg3","msg4","Prelude","delay","provider","seaport","OpenSeaPort","networkName","Network","Rinkeby","OpenSeaAsset","tokenAddress","tokenId","claimInProgress","claimed","useState","nft","setNft","useEffect","api","getAsset","asset","console","log","loader","src","height","alt","name","imageUrl","web3","Web3","givenProvider","eth","defaultChain","claimAssetContract","Contract","secretCode","Promise","resolve","reject","methods","claim","from","receipt","err","claimAsset","ClaimableAsset","onClaimed","showCodePrompt","setShowCodePrompt","setClaimInProgress","handleCode","e","preventDefault","target","code","alert","JSON","stringify","lock","style","onSubmit","htmlFor","type","lockOpen","assets","gameMachine","context","message","assetStates","start","claimFour","CLAIMED","assign","prevStates","claimThree","claimTwo","claimOne","nearlyDone","done","ClaimFour","handleClaimed","map","index","finaleMachine","showBox","ADVANCE","revealedBox","Finale","href","stageMachine","auth","PROGRESS","prelude","finale","Game","toLowerCase","App","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.50f06795.chunk.js","sourcesContent":["import React from \"react\";\nimport { createMachine } from \"xstate\";\nimport { useMachine } from \"@xstate/react\";\n\nconst authMachine = createMachine({\n  id: \"auth\",\n  initial: \"unauthenticated\",\n  states: {\n    unauthenticated: {\n      on: {\n        FABIAN: \"fabian\",\n        NOT_FABIAN: \"notFabian\",\n        FAIL: \"fail\",\n      },\n    },\n    fabian: {\n      entry: \"complete\",\n    },\n    notFabian: {},\n    fail: {},\n  },\n});\n\nasync function connectMetaMask(onGetAddress) {\n  const address = (\n    await window.ethereum.request({ method: \"eth_requestAccounts\" })\n  )[0];\n  onGetAddress(address);\n}\n\nexport default function Auth({ fabiansEth, onComplete }) {\n  const [state, send] = useMachine(authMachine, {\n    actions: {\n      complete: onComplete,\n    },\n  });\n\n  const handleGetAddress = (address) => {\n    const isFabian = address === fabiansEth;\n    if (isFabian) {\n      send(\"FABIAN\");\n    } else {\n      send(\"NOT_FABIAN\");\n    }\n  };\n\n  switch (state.value) {\n    case \"unauthenticated\":\n      return (\n        <button onClick={() => connectMetaMask(handleGetAddress)}\n        className=\"bg-green-500 px-9 py-3 text-center font-extrabold rounded-full\">\n          Mit MetaMask verbinden\n        </button>\n      );\n\n    case \"fail\":\n      return <p>Da ist was schiefgegangen.</p>;\n\n    case \"notFabian\":\n      return <p>Nicht <code>fabians.eth</code>. Hau ab.</p>;\n\n    case \"fabian\":\n    default:\n      return null;\n  }\n}\n","import React from 'react'\n\nexport default function QuestionMarkBox(props) {\n  return (\n    <div {...props} className=\"w-72 h-72 text-9xl text-black text-center align-middle font-bold rounded-lg border-black border-2 bg-gray-100 flex flex-col justify-center\"><span>?</span></div>\n  )\n}\n","import React from 'react'\n\nexport default function Para({ children, extraClassNames}) {\n  return (\n    <div className={`p-6 text-center ${extraClassNames || \"\"}`}>\n      {children}\n    </div>\n  )\n}\n\n","import React from \"react\";\nimport { createMachine } from \"xstate\";\nimport { useMachine } from \"@xstate/react\";\nimport { Fade } from \"react-awesome-reveal\";\nimport QuestionMarkBox from \"./QuestionMarkBox\";\nimport Para from \"./Para\";\n\nconst preludeMachine = createMachine({\n  id: \"prelude\",\n  initial: \"msg1\",\n  states: {\n    msg1: {\n      after: {\n        2500: \"msg2\",\n      },\n    },\n    msg2: {\n      after: {\n        1000: \"msg3\",\n      },\n    },\n    msg3: {\n      after: {\n        2000: \"msg4\",\n      },\n    },\n    msg4: {},\n  },\n});\n\nexport default function Prelude({ onComplete }) {\n  const [state, send] = useMachine(preludeMachine);\n\n  switch (state.value) {\n    case \"msg1\":\n      return (\n        <Fade delay={500}>\n          <Para>Hallo, fabians40.eth! (get it?)</Para>\n        </Fade>\n      );\n\n    case \"msg2\":\n      return (\n        <Fade delay={500}>\n          <Para>Hier ist eine Box.</Para>\n        </Fade>\n      );\n\n    case \"msg3\":\n      return (\n        <>\n          <Para>Hier ist eine Box.</Para>\n          <Fade delay={500}>\n            <QuestionMarkBox />\n          </Fade>\n        </>\n      );\n\n    case \"msg4\":\n      return (\n        <>\n          <Para>Hier ist eine Box.</Para>\n          <div className=\"cursor-pointer\" onClick={onComplete}><QuestionMarkBox/></div>\n          <Fade delay={500}>\n            <Para>\n              Aber was ist in der Box? Klick mal drauf, vielleicht kannst du sie\n              öffnen…\n            </Para>\n          </Fade>\n        </>\n      );\n\n    default:\n      return null;\n  }\n}\n","export default __webpack_public_path__ + \"static/media/ethereum.23097e39.png\";","import React, { useEffect, useState } from \"react\";\nimport { OpenSeaPort, Network } from \"opensea-js\";\nimport ethereum from \"./assets/ethereum.png\";\n\nconst provider = window.ethereum;\nexport const seaport = new OpenSeaPort(provider, {\n  networkName: Network.Rinkeby,\n});\n\nexport default function OpenSeaAsset({ tokenAddress, tokenId, claimInProgress = false, claimed = false }) {\n  const [nft, setNft] = useState(null);\n\n  useEffect(() => {\n    async function getAsset() {\n      const asset = await seaport.api.getAsset({\n        tokenAddress: tokenAddress,\n        tokenId: tokenId,\n      });\n      console.log(asset);\n      setNft(asset);\n    }\n    getAsset();\n  }, [tokenAddress, tokenId]);\n\n  const loader = (<div className=\"absolute top-0 left-0 flex flex-col justify-center items-center animate-pulse h-full w-full\">\n  <img src={ethereum} height=\"50\" alt=\"ethereum logo\" className=\"h-1/2 rounded-full bg-gray-100 p-4\"/>\n</div>);\n  return (\n    <>\n      <section className=\"relative rounded-lg border-black border-2 bg-gray-100 p-4 text-black h-full\">\n        {nft ? (\n          <>\n          <div className={`flex flex-col items-center justify-between h-full ${claimed ? \"\" : \"filter blur-sm\"}`}>\n            <h1>{nft.name}</h1>\n            <img\n              src={nft.imageUrl}\n              height=\"164\"\n              alt={`OpenSea asset \"${nft.name}\"`}\n            />\n          </div>\n          {claimInProgress && loader}\n          </>\n        ) : (\n          loader\n        )}\n      </section>\n    </>\n  );\n}\n","import Web3 from \"web3\";\nimport { fabiansEth } from \"./App\";\n\nconst web3 = new Web3(Web3.givenProvider || \"ws://localhost:8545\");\nweb3.eth.defaultChain = \"rinkeby\";\n\n// prettier-ignore\nconst claimAssetABI = [{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"itemId\",\"type\":\"uint256\"},{\"internalType\":\"string\",\"name\":\"secret\",\"type\":\"string\"}],\"name\":\"claim\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"}];\nconst claimAssetAddress = \"0x31D3032911888f34506a733Cbe1F2107bDa9A7C4\";\nconst claimAssetContract = new web3.eth.Contract(\n  claimAssetABI,\n  claimAssetAddress\n);\n\nasync function claimAsset(tokenId, secretCode) {\n  return new Promise((resolve, reject) => {\n    claimAssetContract.methods\n      .claim(tokenId, secretCode)\n      .send({ from: fabiansEth })\n      .on(\"receipt\", function (receipt) {\n        resolve(receipt);\n      })\n      .on(\"error\", (err) => {\n        reject(err);\n      });\n  });\n}\n\nexport default claimAsset;\n","export default __webpack_public_path__ + \"static/media/lock.129ba482.png\";","export default __webpack_public_path__ + \"static/media/lock-open.a05787d1.png\";","import React, { useState } from \"react\";\nimport OpenSeaAsset from \"./OpenSeaAsset\";\nimport claimAsset from \"./claimAssetContract\";\nimport lock from \"./assets/lock.png\";\nimport lockOpen from \"./assets/lock-open.png\";\n\nexport default function ClaimableAsset({ state, asset, onClaimed }) {\n  const [showCodePrompt, setShowCodePrompt] = useState(false);\n  const [claimInProgress, setClaimInProgress] = useState(false);\n\n  const handleClick = () => setShowCodePrompt(true);\n\n  const handleCode = async (e) => {\n    e.preventDefault();\n    setShowCodePrompt(false);\n    const secretCode = e.target.code.value;\n    setClaimInProgress(true);\n    try {\n      const receipt = await claimAsset(asset.tokenId, secretCode);\n      console.log(receipt);\n      setClaimInProgress(false);\n      onClaimed();\n    } catch (e) {\n      alert(`Fehler: ${JSON.stringify(e)}`);\n      setClaimInProgress(false);\n    }\n  };\n\n  switch (state) {\n    case \"locked\":\n      return (\n        <div className=\"rounded-lg border-black border-2 bg-gray-100 p-4 text-black h-full flex flex-col justify-center\">\n          <img height=\"164\" src={lock} alt=\"lock\" />\n        </div>\n      );\n    case \"claimable\":\n      if (showCodePrompt || claimInProgress) {\n        return (\n          <div className=\"relative h-full\">\n            <OpenSeaAsset\n              tokenAddress={asset.tokenAddress}\n              tokenId={asset.tokenId}\n              onClaimed={onClaimed}\n              claimInProgress={claimInProgress}\n            />\n            {showCodePrompt &&\n              <div className=\"absolute inset-y-1/4 mx-4 p-2 text-black text-base bg-gray-300 border-gray-500 border-2 rounded\" style={{height: \"fit-content\"}}>\n                <form onSubmit={handleCode}>\n                  <label htmlFor=\"code\" className=\"my-1\">\n                    Code?\n                    <input type=\"text\" name=\"code\" className=\"w-full text-xl my-1\"/>\n                  </label>\n                  <button type=\"submit\" className=\"border-gray-500 border-2 my-1 p-1 rounded\">Los</button>\n                </form>\n              </div>\n            }\n          </div>\n        );\n      } else {\n        return (\n          <button onClick={handleClick} className=\"h-full\">\n            <div className=\"rounded-lg border-black border-2 bg-gray-100 p-4 text-black h-full flex flex-col justify-center\">\n              <img height=\"164\" src={lockOpen} alt=\"open lock\" />\n            </div>\n          </button>\n        );\n      }\n    case \"claimed\":\n      return (\n        <OpenSeaAsset\n          tokenAddress={asset.tokenAddress}\n          tokenId={asset.tokenId}\n          claimed\n        />\n      );\n    default:\n      return null;\n  }\n}\n","import React from \"react\";\nimport { createMachine, assign } from \"xstate\";\nimport { useMachine } from \"@xstate/react\";\nimport ClaimableAsset from \"./ClaimableAsset\";\nimport Para from \"./Para\";\n\nconst assets = [\n  {\n    tokenAddress: \"0x88b48f654c30e99bc2e4a1559b4dcf1ad93fa656\",\n    tokenId:\n    \"58310386485557310259002237365246659266895050305048410171636348436913447763969\",\n  },\n  {\n    tokenAddress: \"0x88b48f654c30e99bc2e4a1559b4dcf1ad93fa656\",\n    tokenId:\n      \"58310386485557310259002237365246659266895050305048410171636348438012959391745\",\n  },\n  {\n    tokenAddress: \"0x88b48f654c30e99bc2e4a1559b4dcf1ad93fa656\",\n    tokenId:\n    \"58310386485557310259002237365246659266895050305048410171636348439112471019521\",\n  },\n  {\n    tokenAddress: \"0x88b48f654c30e99bc2e4a1559b4dcf1ad93fa656\",\n    tokenId:\n      \"58310386485557310259002237365246659266895050305048410171636348441311494275073\",\n  },\n];\n\nconst gameMachine = createMachine({\n  id: \"game\",\n  initial: \"start\",\n  context: {\n    message:\n      \"Nicht so schnell! Um die Box zu öffnen, musst du erst vier Dinge finden…\",\n    assetStates: {\n      1: \"claimable\",\n      2: \"locked\",\n      3: \"locked\",\n      4: \"locked\",\n    },\n  },\n  states: {\n    start: {\n      after: {\n        5000: \"claimFour\",\n      },\n    },\n    claimFour: {\n      on: {\n        CLAIMED: {\n          target: \"claimThree\",\n          actions: assign({\n            assetStates: (context) => {\n              const prevStates = context.assetStates;\n              return { ...prevStates, 1: \"claimed\", 2: \"claimable\" };\n            },\n          }),\n        },\n      },\n      entry: assign({\n        message: \"Finde die Person, die den Code kennt. Hint: 30 Mark\",\n      }),\n    },\n    claimThree: {\n      on: {\n        CLAIMED: {\n          target: \"claimTwo\",\n          actions: assign({\n            assetStates: (context) => {\n              const prevStates = context.assetStates;\n              return { ...prevStates, 2: \"claimed\", 3: \"claimable\" };\n            },\n          }),\n        },\n      },\n      entry: assign({ message: \"Den nächsten Code hat der Besitzer eines zweihändigen Elfen-Kampfhammers.\" }),\n    },\n    claimTwo: {\n      on: {\n        CLAIMED: {\n          target: \"claimOne\",\n          actions: assign({\n            assetStates: (context) => {\n              const prevStates = context.assetStates;\n              return { ...prevStates, 3: \"claimed\", 4: \"claimable\" };\n            },\n          }),\n        },\n      },\n      entry: assign({ message: \"Raidriiiiiiiiiiiiiiii!\" }),\n    },\n    claimOne: {\n      on: {\n        CLAIMED: {\n          target: \"nearlyDone\",\n          actions: assign({\n            assetStates: (context) => {\n              const prevStates = context.assetStates;\n              return { ...prevStates, 4: \"claimed\" };\n            },\n          }),\n        },\n      },\n      entry: assign({\n        message: \"Noch eine letzte MASSIVE Herausforderung…\",\n      }),\n    },\n    nearlyDone: {\n      after: {\n        2500: 'done'\n      },\n      entry: assign({\n        message: \"Jetzt hast du alles, was du brauchst!\",\n      }),\n    },\n    done: {\n      entry: \"complete\",\n    },\n  },\n});\n\nexport default function ClaimFour({ onComplete }) {\n  const [state, send] = useMachine(gameMachine, {\n    actions: {\n      complete: onComplete,\n    },\n  });\n\n  const handleClaimed = () => send(\"CLAIMED\");\n\n  return (\n    <div>\n      <Para>{state.context.message}</Para>\n      <ul className=\"flex flex-row gap-4 items-stretch\">\n        {assets.map((asset, index) => (\n          <li key={asset.tokenId} className=\"flex-1\">\n            <ClaimableAsset\n              state={state.context.assetStates[index + 1]}\n              asset={asset}\n              onClaimed={handleClaimed}\n            />\n          </li>\n        ))}\n      </ul>\n    </div>\n  );\n}\n","import React from \"react\";\nimport { createMachine } from \"xstate\";\nimport { useMachine } from \"@xstate/react\";\nimport ClaimableAsset from \"./ClaimableAsset\";\nimport QuestionMarkBox from \"./QuestionMarkBox\";\nimport Para from \"./Para\";\n\nconst asset = {\n  tokenAddress: \"0x88b48f654c30e99bc2e4a1559b4dcf1ad93fa656\",\n  tokenId:\n    \"58310386485557310259002237365246659266895050305048410171636348440211982647297\",\n}\nconst finaleMachine = createMachine({\n  id: \"finale\",\n  initial: \"start\",\n  states: {\n    start: {\n      after: {\n        2000: \"showBox\",\n      },\n    },\n    showBox: {\n      on: {\n        ADVANCE: \"revealedBox\",\n      },\n    },\n    revealedBox: {\n      on: {\n        ADVANCE: \"claimed\",\n      },\n    },\n    claimed: {},\n  },\n});\n\nexport default function Finale() {\n  const [state, send] = useMachine(finaleMachine);\n\n  switch(state.value) {\n    case 'start':\n      return (\n        <Para>Die Box gehört fast dir!</Para>\n      )\n\n    case 'showBox':\n      return (\n        <>\n          <Para>Schnapp sie dir!</Para>\n          <button onClick={() => send('ADVANCE')}><QuestionMarkBox /></button>\n        </>\n      )\n\n    case 'revealedBox':\n      return (\n        <>\n          <Para>Ein letzter Code: <code>fabians40.eth</code></Para>\n          <div className=\"w-72 h-72\">\n            <ClaimableAsset\n              state=\"claimable\"\n              asset={asset}\n              onClaimed={() => send('ADVANCE')}\n            />\n          </div>\n        </>\n      )\n\n    case 'claimed':\n      return (\n        <>\n          <Para>Endlich deins!</Para>\n          <Para>Finde heraus, was sich in der Box versteckt:</Para>\n          <div className=\"w-72 h-72\">\n            <a href={`https://testnets.opensea.io/assets/${asset.tokenAddress}/${asset.tokenId}`}>\n              <ClaimableAsset\n                state=\"claimed\"\n                asset={asset}\n              />\n            </a>\n          </div>\n        </>\n      )\n\n    default:\n      return null;\n  }\n}\n","import React from \"react\";\nimport { createMachine } from \"xstate\";\nimport { useMachine } from \"@xstate/react\";\nimport Auth from \"./Auth\";\nimport Prelude from \"./Prelude\";\nimport ClaimFour from \"./ClaimFour\";\nimport Finale from \"./Finale\";\n\nconst stageMachine = createMachine({\n  id: \"stage\",\n  initial: \"auth\",\n  states: {\n    auth: {\n      on: { PROGRESS: \"prelude\" },\n    },\n    prelude: {\n      on: { PROGRESS: \"claimFour\" },\n    },\n    claimFour: {\n      on: { PROGRESS: \"finale\" },\n    },\n    finale: {},\n  },\n});\n\nexport default function Game({ fabiansEth }) {\n  const [state, send] = useMachine(stageMachine);\n\n  switch (state.value) {\n    case \"auth\":\n      return (\n        <Auth fabiansEth={fabiansEth} onComplete={() => send(\"PROGRESS\")} />\n      );\n    case \"prelude\":\n      return <Prelude onComplete={() => send(\"PROGRESS\")} />;\n    case \"claimFour\":\n      return <ClaimFour onComplete={() => send(\"PROGRESS\")} />;\n    case \"finale\":\n      return <Finale />;\n    default:\n      return null;\n  }\n}\n","import React from \"react\";\nimport \"./App.css\";\nimport Game from \"./Game\";\n\n// TODO: change to real addr: 0x5Ed82a25DfeEaE0c35297B605fC9c63A14caE0fd\nexport const fabiansEth =\n  \"0x80eA825A030bcAbc7f7c4571f4ed1da2FB49d8bf\".toLowerCase();\n\nfunction App() {\n  return (\n    <div className=\"flex flex-col items-center mt-6 mx-2 text-white text-3xl\">\n      <Game fabiansEth={fabiansEth} />\n    </div>\n  )\n}\n\nexport default App;\n","const reportWebVitals = (onPerfEntry) => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import(\"web-vitals\").then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport \"./index.css\";\nimport App from \"./App\";\nimport reportWebVitals from \"./reportWebVitals\";\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById(\"root\")\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}